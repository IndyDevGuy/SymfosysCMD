<Application x:Class="SymfosysCMD.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:SymfosysCMD"
    xmlns:windows="clr-namespace:SymfosysCMD.Windows"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:adonisConverters="clr-namespace:AdonisUI.Converters;assembly=AdonisUI"
    xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
    xmlns:adonisControls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <materialDesign:BundledTheme BaseTheme="Light" PrimaryColor="DeepPurple" SecondaryColor="Lime" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/AdonisUI;component/ColorSchemes/Light.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/AdonisUI.ClassicTheme;component/Resources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <!-- override styles -->
            <Color x:Key="{x:Static adonisUi:Colors.AccentColor}">DarkGreen</Color>
            <Color x:Key="{x:Static adonisUi:Colors.AccentHighlightColor}">Green</Color>
            <Color x:Key="{x:Static adonisUi:Colors.AccentIntenseHighlightColor}">Green</Color>
            <Color x:Key="{x:Static adonisUi:Colors.AccentIntenseHighlightBorderColor}">Green</Color>
            <Color x:Key="{x:Static adonisUi:Colors.AccentInteractionColor}">DarkGreen</Color>
            <Color x:Key="{x:Static adonisUi:Colors.AccentInteractionBorderColor}">DarkGreen</Color>

            <LinearGradientBrush x:Key="GradientBlackBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="#3D3D4C" Offset="0" />
                <GradientStop Color="#32323F" Offset="1.0" />
            </LinearGradientBrush>


            <LinearGradientBrush x:Key="BlackGlossBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="#3D3D4C" Offset="0" />
                <GradientStop Color="#3D3D4C" Offset="0.5" />
                <GradientStop Color="#32323F" Offset="0.5" />
                <GradientStop Color="#32323F" Offset="1.0" />
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="BlackGlossBrushReversed" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="#32323F" Offset="0" />
                <GradientStop Color="#32323F" Offset="0.5" />
                <GradientStop Color="#3D3D4C" Offset="0.5" />
                <GradientStop Color="#3D3D4C" Offset="1.0" />
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="GradientWhiteBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="#f6f6f6" Offset="0" />
                <GradientStop Color="#ededed" Offset="1.0" />
            </LinearGradientBrush>
            
            <LinearGradientBrush x:Key="WhiteGlossBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="#f6f6f6" Offset="0" />
                <GradientStop Color="#f6f6f6" Offset="0.5" />
                <GradientStop Color="#ededed" Offset="0.5" />
                <GradientStop Color="#ededed" Offset="1.0" />
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="WhiteGlossBrushReversed" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="#ededed" Offset="0" />
                <GradientStop Color="#ededed" Offset="0.5" />
                <GradientStop Color="#f6f6f6" Offset="0.5" />
                <GradientStop Color="#f6f6f6" Offset="1.0" />
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="GreenGlossBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="Green" Offset="0" />
                <GradientStop Color="Green" Offset="0.5" />
                <GradientStop Color="DarkGreen" Offset="0.5" />
                <GradientStop Color="DarkGreen" Offset="1.0" />
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="GreenGlossBrushReversed" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="DarkGreen" Offset="0" />
                <GradientStop Color="DarkGreen" Offset="0.5" />
                <GradientStop Color="Green" Offset="0.5" />
                <GradientStop Color="Green" Offset="1.0" />
            </LinearGradientBrush>

            <Style x:Key="AppStatusBar" TargetType="{x:Type StatusBar}" BasedOn="{StaticResource {x:Type StatusBar}}">
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsDark, RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}}" Value="true" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Background" Value="{StaticResource GradientBlackBrush}" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsDark, RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}}" Value="false" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Background" Value="{StaticResource GradientWhiteBrush}" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="AccentToggleButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Static adonisUi:Styles.DefaultToAccentToggleButton}}">
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsDark, RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}}" Value="true" />
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}"  Value="false"/>
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Background" Value="{StaticResource GreenGlossBrushReversed}" />
                            <Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="{StaticResource GreenGlossBrushReversed}"/>
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsDark, RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}}" Value="true" />
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}"  Value="true"/>
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Background" Value="{StaticResource GreenGlossBrush}" />
                            <Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="{StaticResource GreenGlossBrush}"/>
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsDark, RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}}" Value="false" />
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}"  Value="false"/>
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Background" Value="{StaticResource GreenGlossBrush}" />
                            <Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="{StaticResource GreenGlossBrush}"/>
                            <Setter Property="Foreground" Value="White" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsDark, RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}}" Value="false" />
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}"  Value="true"/>
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Background" Value="{StaticResource GreenGlossBrushReversed}" />
                            <Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="{StaticResource GreenGlossBrushReversed}"/>
                            <Setter Property="Foreground" Value="White" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type MenuItem}" x:Key="MenuItemParentGreenStyle" BasedOn="{StaticResource {x:Type MenuItem}}" >
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="Background" Value="DarkGreen" />
                        <Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="Green" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type MenuItem}" x:Key="MenuItemSiblingGreenStyle" BasedOn="{StaticResource {x:Type MenuItem}}" >
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="Background" Value="DarkGreen" />
                        <Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="Green" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="AppTabItem" TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid x:Name="OuterGrid">
                                <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}">
                                    <Border.BorderThickness>
                                        <MultiBinding Converter="{x:Static adonisConverters:ValuesToThicknessConverter.Instance}">
                                            <Binding Path="BorderThickness.Left" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="BorderThickness.Top" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="BorderThickness.Right" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Source="0"/>
                                        </MultiBinding>
                                    </Border.BorderThickness>
                                    <Border.CornerRadius>
                                        <MultiBinding Converter="{x:Static adonisConverters:ValuesToCornerRadiusConverter.Instance}">
                                            <Binding Path="(adonisExtensions:CornerRadiusExtension.CornerRadius).TopLeft" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="(adonisExtensions:CornerRadiusExtension.CornerRadius).TopRight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Source="0"/>
                                            <Binding Source="0"/>
                                        </MultiBinding>
                                    </Border.CornerRadius>
                                </Border>

                                <Border x:Name="SpotlightLayer"
                                    Background="{TemplateBinding adonisExtensions:CursorSpotlightExtension.BackgroundBrush}"
                                    BorderBrush="{TemplateBinding adonisExtensions:CursorSpotlightExtension.BorderBrush}"
                                    adonisExtensions:CursorSpotlightExtension.MouseEventSource="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    <Border.BorderThickness>
                                        <MultiBinding Converter="{x:Static adonisConverters:ValuesToThicknessConverter.Instance}">
                                            <Binding Path="BorderThickness.Left" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="BorderThickness.Top" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="BorderThickness.Right" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Source="0"/>
                                        </MultiBinding>
                                    </Border.BorderThickness>
                                    <Border.CornerRadius>
                                        <MultiBinding Converter="{x:Static adonisConverters:ValuesToCornerRadiusConverter.Instance}">
                                            <Binding Path="(adonisExtensions:CornerRadiusExtension.CornerRadius).TopLeft" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="(adonisExtensions:CornerRadiusExtension.CornerRadius).TopRight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Source="0"/>
                                            <Binding Source="0"/>
                                        </MultiBinding>
                                    </Border.CornerRadius>
                                </Border>

                                <Grid Name="TabPanel"
                              Background="Transparent">
                                    <TextBlock x:Name="TabItemContent" Padding="5" Text="{TemplateBinding Header}"/>
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource self}}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Background" TargetName="TabItemContent"  Value="{StaticResource GreenGlossBrushReversed}" />
                                        <Setter Property="Foreground" TargetName="TabItemContent"  Value="White" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource self}}" Value="false" />
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource self}}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Background" TargetName="TabItemContent"  Value="{StaticResource GreenGlossBrush}" />
                                        <Setter Property="Foreground" TargetName="TabItemContent" Value="White" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    
                </Style.Triggers>
            </Style>

            <Style x:Key="{x:Type local:CloseableTab}" TargetType="local:CloseableTab" >
                <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1BorderBrush}}"/>
                <Setter Property="BorderThickness" Value="{DynamicResource {x:Static adonisUi:Dimensions.BorderThickness}}"/>
                <Setter Property="adonisExtensions:CornerRadiusExtension.CornerRadius" Value="{DynamicResource {x:Static adonisUi:Dimensions.CornerRadius}}"/>
                <Setter Property="adonisExtensions:LayerExtension.IncreaseLayer" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="local:CloseableTab">
                            <Grid x:Name="OuterGrid">
                                <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                                    <Border.BorderThickness>
                                        <MultiBinding Converter="{x:Static adonisConverters:ValuesToThicknessConverter.Instance}">
                                            <Binding Path="BorderThickness.Left" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="BorderThickness.Top" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="BorderThickness.Right" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Source="0"/>
                                        </MultiBinding>
                                    </Border.BorderThickness>
                                    <Border.CornerRadius>
                                        <MultiBinding Converter="{x:Static adonisConverters:ValuesToCornerRadiusConverter.Instance}">
                                            <Binding Path="(adonisExtensions:CornerRadiusExtension.CornerRadius).TopLeft" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="(adonisExtensions:CornerRadiusExtension.CornerRadius).TopRight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Source="0"/>
                                            <Binding Source="0"/>
                                        </MultiBinding>
                                    </Border.CornerRadius>
                                </Border>

                                <Border x:Name="SpotlightLayer"
                                Background="{TemplateBinding adonisExtensions:CursorSpotlightExtension.BackgroundBrush}"
                                BorderBrush="{TemplateBinding adonisExtensions:CursorSpotlightExtension.BorderBrush}"
                                adonisExtensions:CursorSpotlightExtension.MouseEventSource="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    <Border.BorderThickness>
                                        <MultiBinding Converter="{x:Static adonisConverters:ValuesToThicknessConverter.Instance}">
                                            <Binding Path="BorderThickness.Left" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="BorderThickness.Top" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="BorderThickness.Right" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Source="0"/>
                                        </MultiBinding>
                                    </Border.BorderThickness>
                                    <Border.CornerRadius>
                                        <MultiBinding Converter="{x:Static adonisConverters:ValuesToCornerRadiusConverter.Instance}">
                                            <Binding Path="(adonisExtensions:CornerRadiusExtension.CornerRadius).TopLeft" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="(adonisExtensions:CornerRadiusExtension.CornerRadius).TopRight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Source="0"/>
                                            <Binding Source="0"/>
                                        </MultiBinding>
                                    </Border.CornerRadius>
                                </Border>

                                <Grid Name="TabPanel"
                              Background="Transparent">
                                    <ContentPresenter x:Name="ContentSite"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              ContentSource="Header"
                                              Margin="8, 4"
                                              RecognizesAccessKey="True"/>
                                </Grid>
                            </Grid>

                            <ControlTemplate.Triggers>

                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Margin" TargetName="OuterGrid" Value="0, 0, 0, -1"/>
                                </Trigger>

                                <Trigger Property="IsSelected" Value="False">
                                    <Setter Property="Margin" TargetName="OuterGrid" Value="0, 2, 0, 0"/>
                                </Trigger>

                                <Trigger Property="IsMouseOver" SourceName="TabPanel" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1HighlightBrush}}"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1HighlightBorderBrush}}"/>
                                    <Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1IntenseHighlightBrush}}"/>
                                    <Setter Property="adonisExtensions:CursorSpotlightExtension.BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1IntenseHighlightBorderBrush}}"/>
                                </Trigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="2"/>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=TabPanel}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2HighlightBrush}}"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2HighlightBorderBrush}}"/>
                                        <Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2IntenseHighlightBrush}}"/>
                                        <Setter Property="adonisExtensions:CursorSpotlightExtension.BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2IntenseHighlightBorderBrush}}"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="3"/>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=TabPanel}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3HighlightBrush}}"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3HighlightBorderBrush}}"/>
                                        <Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3IntenseHighlightBrush}}"/>
                                        <Setter Property="adonisExtensions:CursorSpotlightExtension.BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3IntenseHighlightBorderBrush}}"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="4"/>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=TabPanel}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4HighlightBrush}}"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4HighlightBorderBrush}}"/>
                                        <Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4IntenseHighlightBrush}}"/>
                                        <Setter Property="adonisExtensions:CursorSpotlightExtension.BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4IntenseHighlightBorderBrush}}"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="2">
                        <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2BackgroundBrush}}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2BorderBrush}}"/>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="3">
                        <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3BackgroundBrush}}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3BorderBrush}}"/>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="4">
                        <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4BackgroundBrush}}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4BorderBrush}}"/>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" >
                        <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1HighlightBrush}}"/>
                        <Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="Transparent"/>
                        <Setter Property="adonisExtensions:CursorSpotlightExtension.BorderBrush" Value="Transparent"/>
                    </DataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="2"/>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2HighlightBrush}}"/>
                            <Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="Transparent"/>
                            <Setter Property="adonisExtensions:CursorSpotlightExtension.BorderBrush" Value="Transparent"/>
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="3"/>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3HighlightBrush}}"/>
                            <Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="Transparent"/>
                            <Setter Property="adonisExtensions:CursorSpotlightExtension.BorderBrush" Value="Transparent"/>
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="4"/>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4HighlightBrush}}"/>
                            <Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="Transparent"/>
                            <Setter Property="adonisExtensions:CursorSpotlightExtension.BorderBrush" Value="Transparent"/>
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>

                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.DisabledForegroundBrush}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
