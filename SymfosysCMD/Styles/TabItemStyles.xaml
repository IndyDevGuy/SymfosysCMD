<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:adonisConverters="clr-namespace:AdonisUI.Converters;assembly=AdonisUI"
                    xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI">
    
    <Style x:Key="AppTabItem" TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="OuterGrid">
                        <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}">
                            <Border.BorderThickness>
                                <MultiBinding Converter="{x:Static adonisConverters:ValuesToThicknessConverter.Instance}">
                                    <Binding Path="BorderThickness.Left" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="BorderThickness.Top" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="BorderThickness.Right" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Source="0"/>
                                </MultiBinding>
                            </Border.BorderThickness>
                            <Border.CornerRadius>
                                <MultiBinding Converter="{x:Static adonisConverters:ValuesToCornerRadiusConverter.Instance}">
                                    <Binding Path="(adonisExtensions:CornerRadiusExtension.CornerRadius).TopLeft" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="(adonisExtensions:CornerRadiusExtension.CornerRadius).TopRight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Source="0"/>
                                    <Binding Source="0"/>
                                </MultiBinding>
                            </Border.CornerRadius>
                        </Border>

                        <Border x:Name="SpotlightLayer"
                                    Background="{TemplateBinding adonisExtensions:CursorSpotlightExtension.BackgroundBrush}"
                                    BorderBrush="{TemplateBinding adonisExtensions:CursorSpotlightExtension.BorderBrush}"
                                    adonisExtensions:CursorSpotlightExtension.MouseEventSource="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                            <Border.BorderThickness>
                                <MultiBinding Converter="{x:Static adonisConverters:ValuesToThicknessConverter.Instance}">
                                    <Binding Path="BorderThickness.Left" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="BorderThickness.Top" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="BorderThickness.Right" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Source="0"/>
                                </MultiBinding>
                            </Border.BorderThickness>
                            <Border.CornerRadius>
                                <MultiBinding Converter="{x:Static adonisConverters:ValuesToCornerRadiusConverter.Instance}">
                                    <Binding Path="(adonisExtensions:CornerRadiusExtension.CornerRadius).TopLeft" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="(adonisExtensions:CornerRadiusExtension.CornerRadius).TopRight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Source="0"/>
                                    <Binding Source="0"/>
                                </MultiBinding>
                            </Border.CornerRadius>
                        </Border>

                        <Grid Name="TabPanel"
                              Background="Transparent">
                            <TextBlock x:Name="TabItemContent" Padding="5" Text="{TemplateBinding Header}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource self}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" TargetName="TabItemContent"  Value="{DynamicResource GreenGlossBrushReversed}" />
                                <Setter Property="Foreground" TargetName="TabItemContent"  Value="White" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource self}}" Value="false" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource self}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" TargetName="TabItemContent"  Value="{DynamicResource GreenGlossBrush}" />
                                <Setter Property="Foreground" TargetName="TabItemContent" Value="White" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>